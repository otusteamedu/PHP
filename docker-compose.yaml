version: "3"

services:
  webserver:
    #    build:
    #      args:
    #        UID: ${SERVER_UID}
    #        USER: ${SERVER_USER}
    #        GID: ${SERVER_GID}
    #        GROUP: ${SERVER_GROUP}
    #      context: docker/nginx
    image: altimofeev/webserver-localhost
    container_name: webserver
    working_dir: ${WORKDIR}
    ports:
      - 80:80
    depends_on:
      - app
    volumes:
      - ./code:${WORKDIR}
      - sock:${SOCKET_DIR}

  app:
    #    build:
    #      args:
    #        UID: ${SERVER_UID}
    #        USER: ${SERVER_USER}
    #        GID: ${SERVER_GID}
    #        GROUP: ${SERVER_GROUP}
    #      context: docker/fpm
    image: altimofeev/php-fpm
    container_name: app
    env_file:
      - .env
    working_dir: ${WORKDIR}
    volumes:
      - ./code:${WORKDIR}
      - sock:${SOCKET_DIR}

  postgres:
    container_name: ${DB_HOST}
    image: postgres:13.2-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:management
    container_name: ${RABBITMQ_HOST}
    hostname: ${RABBITMQ_HOST}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    volumes:
      - ./rabbit/data:/var/lib/rabbitmq/
      - ./rabbit/log:/var/log/rabbitmq

volumes:
  sock:
