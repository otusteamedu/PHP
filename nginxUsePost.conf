server {
    # указываем 80 порт для соединения
    listen 80;
    # нужно указать, какому доменному имени принадлежит наш конфиг
    server_name otus.loc;

    # задаём корневую директорию
    root /var/www/html/otus.loc;
    #root /data/otus.loc;

    # стартовый файл
    index index.php index.html;

    # при обращении к статическим файлам логи не нужны, равно как и обращение к fpm
    location ~* .(jpg|jpeg|gif|css|png|js|ico|html)$ {
        access_log off;
        expires max;
    }

    # добавлю и возможность работать с get
    location = /test-get {
        if ($arg_test = true) {
            rewrite ^/test-get$ /test.php;
        }
        if ($arg_foo ~* "^$") {
            rewrite ^/test-get$ /index.php;
        }
    }

    location = /test-post {
        default_type 'text/plain';
        # content_by_lua_file /var/www/html/otus.loc/index.lua;

        content_by_lua '
            if ngx.req.get_method() ~= "POST" then
                ngx.log(ngx.ERR, "wrong event request method: ", ngx.req.get_method())
                return ngx.exit (ngx.HTTP_NOT_ALLOWED)
            end

            ngx.req.read_body()
            local data = ngx.req.get_body_data()
            if not data then
                ngx.log(ngx.ERR, "failed to get request body")
                return ngx.exit (ngx.HTTP_BAD_REQUEST)
            end

            local args, err = ngx.req.get_post_args()
            for key, val in pairs(args) do
                if key == "checker" then
                    if val == "fpm" then
                      ngx.redirect("/testpost")
                      return
                    end
                end
                if key == "str" then
                 str = val
                end
            end
            -- len = string.len(str)
            len = #str -- тоже самое
            i = 0
            open = 0
            while true do
                if i >= len then
                    break
                end
                i = i + 1
                item = string.sub(str, i, i)
                if item == "(" then
                    open = open + 1
                elseif item == ")" then
                    open = open - 1
                end
                if open < 0 then
                    break
                end
            end
            if open == 0 and len > 0 then
                ngx.status = ngx.HTTP_OK
                ngx.say("Success: OK")
            else
                -- Статус 400 в случае ошибки
                ngx.status = ngx.HTTP_BAD_REQUEST
                ngx.say("Error 400: Bad request")
            end
        ';
    }

    # все запросы заворачиваются в корневую директорию root на index.php
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # правило обращения к php-fpm
    location ~* .php$ {
        try_files $uri = 404;
        fastcgi_split_path_info ^(.+.php)(/.+)$;
        # fastcgi_pass app:9000;
        fastcgi_pass unix:/sock/docker.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
