CREATE TABLE public.countries (
	id int2 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	short_name varchar(20) NOT NULL,
	full_name varchar(50) NOT NULL,
	CONSTRAINT countries_pk PRIMARY KEY (id),
	CONSTRAINT countries_un_full_name UNIQUE (full_name),
	CONSTRAINT countries_un_short_name UNIQUE (short_name)
);


CREATE TABLE public.films (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(50) NOT NULL,
	release_year int4 NOT NULL,
	сountry_id int2 NOT NULL,
	duration int2 NOT NULL,
	CONSTRAINT films_check CHECK ((release_year > 1880)),
	CONSTRAINT films_pk PRIMARY KEY (id),
	CONSTRAINT films_un UNIQUE (title, release_year, "сountry_id"),
	CONSTRAINT films_fk FOREIGN KEY ("сountry_id") REFERENCES countries(id)
);


CREATE TABLE public.halls (
	id int2 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(20) NOT NULL,
	CONSTRAINT halls_pk PRIMARY KEY (id),
	CONSTRAINT halls_un UNIQUE (title)
);

CREATE TABLE public.users (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username varchar(100) NOT NULL,
	email varchar(100) NOT NULL,
	phone varchar(20) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (id),
	CONSTRAINT users_un_email UNIQUE (email),
	CONSTRAINT users_un_phone UNIQUE (phone)
);


CREATE TABLE public.orders (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	created_at timestamp NOT NULL,
	user_id int4 NOT NULL,
	CONSTRAINT orders_pk PRIMARY KEY (id),
	CONSTRAINT orders_fk FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE public.shows (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	start_at timestamp NOT NULL,
	hall_id int2 NOT NULL,
	film_id int4 NOT NULL,
	CONSTRAINT shows_pk PRIMARY KEY (id),
	CONSTRAINT shows_un UNIQUE (start_at, hall_id),
	CONSTRAINT shows_fk_film FOREIGN KEY (film_id) REFERENCES films(id),
	CONSTRAINT shows_fk_hall FOREIGN KEY (hall_id) REFERENCES halls(id)
);



CREATE TABLE public.tickets (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	show_id int4 NOT NULL,
	seat int4 NOT NULL,
	price float4 NOT NULL,
	order_id int4 NOT NULL,
	CONSTRAINT tickets_pk PRIMARY KEY (id),
	CONSTRAINT tickets_un UNIQUE (show_id, seat),
	CONSTRAINT tickets_fk_show FOREIGN KEY (show_id) REFERENCES shows(id),
	CONSTRAINT tickets_fk_order FOREIGN KEY (order_id) REFERENCES orders(id)
);
