version: '3'
services:
  php:
    container_name: php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    hostname: php
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql

  nginx:
    container_name: nginx
    image: nginx
    hostname: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/default-dev.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    depends_on:
      - php

  mysql:
    container_name: mysql
    image: library/mysql:5.7
    hostname: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/var/data/mysql:/var/lib/mysql
      - ./db.sql:/db.sql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    networks:
      default:
        ipv4_address: 10.100.0.10

  composer:
    image: composer/composer
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    command: install

  frontend:
    image: node
    container_name: frontend
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    command: npm run dev

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.0.0/16
